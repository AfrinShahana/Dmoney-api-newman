{
	"info": {
		"_postman_id": "12439bc1-4a30-40a7-9be6-094d80632bf0",
		"name": "assignment-02 roadtosdet",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "25408740"
	},
	"item": [
		{
			"name": "login successful",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var jsonData= pm.response.json();\r",
							"pm.collectionVariables.set(\"token\",jsonData.token)\r",
							"//pm.environment.set(\"token\",jsonData.token)\r",
							"\r",
							"pm.test(\"Check if user logged in successfully\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.message).contains(\"Login successfully\")\r",
							"});\r",
							"\r",
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"email\":\"salman@roadtocareer.net\",\r\n    \"password\":\"1234\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseUrl}}/user/login",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"user",
						"login"
					]
				}
			},
			"response": []
		},
		{
			"name": "create agent with valid email &",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"var randomId=_.random(10000,99999)\r",
							"var phoneNumber=\"0170\"+_.random(1000000,9999999)\r",
							"pm.collectionVariables.set(\"randomId\",randomId)\r",
							"pm.collectionVariables.set(\"phoneNumber\",phoneNumber)\r",
							"\r",
							"pm.environment.set(\"randomId\",randomId)\r",
							"pm.environment.set(\"phoneNumber\",phoneNumber)"
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Check if User created successfully\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.message).contains(\"User created successfully\");\r",
							"});\r",
							"\r",
							"pm.test(\"Status code is 201\", function () {\r",
							"    pm.response.to.have.status(201);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Authorization",
						"value": "{{token}}",
						"type": "text"
					},
					{
						"key": "X-AUTH-SECRET-KEY",
						"value": "{{secretKey}}",
						"type": "text"
					},
					{
						"key": "",
						"value": "",
						"type": "text",
						"disabled": true
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"name\":\"Test Agent number  01\",\r\n    \"email\":\"agent{{randomId}}@test.com\",\r\n    \"password\":\"1234\",\r\n    \"phone_number\":\"{{phoneNumber}}\",\r\n    \"nid\":\"123456789966\",\r\n    \"role\":\"Agent\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseUrl}}/user/create",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"user",
						"create"
					]
				}
			},
			"response": []
		},
		{
			"name": "create agent with invalid email",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"var randomId=_.random(10000,99999)\r",
							"var phoneNumber=\"0170\"+_.random(1000000,9999999)\r",
							"pm.collectionVariables.set(\"randomId\",randomId)\r",
							"pm.collectionVariables.set(\"phoneNumber\",phoneNumber)\r",
							"\r",
							"pm.environment.set(\"randomId\",randomId)\r",
							"pm.environment.set(\"phoneNumber\",phoneNumber)"
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Check if agent created successfully with invalid email and password   \", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.message).contains(\"User created successfully\");\r",
							"});\r",
							"\r",
							"pm.test(\"Status code is 201\", function () {\r",
							"    pm.response.to.have.status(201);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Authorization",
						"value": "{{token}}",
						"type": "text"
					},
					{
						"key": "X-AUTH-SECRET-KEY",
						"value": "{{secretKey}}",
						"type": "text"
					},
					{
						"key": "",
						"value": "",
						"type": "text",
						"disabled": true
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"name\":\"Test Agent number  01\",\r\n    \"email\":\"abcdefgH\",\r\n    \"password\":\"\",\r\n    \"phone_number\":\"{{phoneNumber}}\",\r\n    \"nid\":\"12345678996600\",\r\n    \"role\":\"Agent\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseUrl}}/user/create",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"user",
						"create"
					]
				}
			},
			"response": []
		},
		{
			"name": "create customer with valid email and password",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"var randomId=_.random(10000,99999)\r",
							"var phoneNumber=\"0150\"+_.random(1000000,9999999)\r",
							"pm.collectionVariables.set(\"randomId\",randomId)\r",
							"pm.collectionVariables.set(\"phoneNumber\",phoneNumber)\r",
							"\r",
							"pm.environment.set(\"randomId\",randomId)\r",
							"pm.environment.set(\"phoneNumber\",phoneNumber)"
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"customer should created successfully\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.message).to.contains(\"User created successfully\");\r",
							"});\r",
							"\r",
							"var jsonData= pm.response.json();\r",
							"var id= jsonData.user.id;\r",
							"var phonenumber=jsonData.user.phone_number;\r",
							"pm.collectionVariables.set(\"userId\",id)\r",
							"pm.collectionVariables.set(\"phone_number\",phonenumber)\r",
							"\r",
							"pm.environment.set(\"userId\",id)\r",
							"pm.environment.set(\"phone_number\",phonenumber)\r",
							"pm.test(\"Status code is 201\", function () {\r",
							"    pm.response.to.have.status(201);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Authorization",
						"value": "{{token}}",
						"type": "text"
					},
					{
						"key": "X-AUTH-SECRET-KEY",
						"value": "{{secretKey}}",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"name\":\"Test Customer 1\",\r\n    \"email\":\"user{{randomId}}@test.com\",\r\n    \"password\":\"1234\",\r\n    \"phone_number\":\"{{phoneNumber}}\",\r\n    \"nid\":\"123456789\",\r\n    \"role\":\"Customer\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseUrl}}/user/create",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"user",
						"create"
					]
				}
			},
			"response": []
		},
		{
			"name": "create customer with ivalid email and password Copy",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"var randomId=_.random(10000,99999)\r",
							"var phoneNumber=\"0150\"+_.random(1000000,9999999)\r",
							"pm.collectionVariables.set(\"randomId\",randomId)\r",
							"pm.collectionVariables.set(\"phoneNumber\",phoneNumber)\r",
							"\r",
							"pm.environment.set(\"randomId\",randomId)\r",
							"pm.environment.set(\"phoneNumber\",phoneNumber)"
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"User should not created successfully if inputs wrong email and password \", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.message).to.contains(\"User created successfully\");\r",
							"});\r",
							"\r",
							"var jsonData= pm.response.json();\r",
							"var id= jsonData.user.id;\r",
							"var phonenumber=jsonData.user.phone_number;\r",
							"pm.collectionVariables.set(\"userId\",id)\r",
							"pm.collectionVariables.set(\"phone_number\",phonenumber)\r",
							"\r",
							"pm.environment.set(\"userId\",id)\r",
							"pm.environment.set(\"phone_number\",phonenumber)\r",
							"\r",
							"pm.test(\"Status code is 201\", function () {\r",
							"    pm.response.to.have.status(201);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Authorization",
						"value": "{{token}}",
						"type": "text"
					},
					{
						"key": "X-AUTH-SECRET-KEY",
						"value": "{{secretKey}}",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"name\":\"Test Customer 1\",\r\n    \"email\":\"user{{randomId}}com\",\r\n    \"password\":\"\",\r\n    \"phone_number\":\"{{phoneNumber}}\",\r\n    \"nid\":\"123456789\",\r\n    \"role\":\"Customer\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseUrl}}/user/create",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"user",
						"create"
					]
				}
			},
			"response": []
		},
		{
			"name": "agent deposit  to Customer valid amount",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Customer deposit is successful\",()=>{\r",
							"    var jsonData= pm.response.json();\r",
							"    var message= jsonData.message;\r",
							"    pm.expect(message).contains(\"Deposit successful\")\r",
							"})\r",
							"pm.test(\"Status code is 201\", function () {\r",
							"    pm.response.to.have.status(201);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Authorization",
						"value": "{{token}}",
						"type": "text"
					},
					{
						"key": "X-AUTH-SECRET-KEY",
						"value": "{{secretKey}}",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"from_account\":\"01704561926\",\r\n    \"to_account\":\"01504197313\",\r\n    \"amount\":2000\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseUrl}}/transaction/deposit",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"transaction",
						"deposit"
					]
				}
			},
			"response": []
		},
		{
			"name": "agent deposit  to Customer invalid amount",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Customer deposit is successful\",()=>{\r",
							"    var jsonData= pm.response.json();\r",
							"    var message= jsonData.message;\r",
							"    pm.expect(message).contains(\"Account does not exist\")\r",
							"})\r",
							"pm.test(\"Status code is 404\", function () {\r",
							"    pm.response.to.have.status(404);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Authorization",
						"value": "{{token}}",
						"type": "text"
					},
					{
						"key": "X-AUTH-SECRET-KEY",
						"value": "{{secretKey}}",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"from_account\":\"01704561926\",\r\n    \"to_account\":\"01504197313999\",\r\n    \"amount\":1000\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseUrl}}/transaction/deposit",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"transaction",
						"deposit"
					]
				}
			},
			"response": []
		},
		{
			"name": "system Deposit to Agent valid account",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 201\", function () {\r",
							"    pm.response.to.have.status(201);\r",
							"});\r",
							"\r",
							"pm.test(\"Customer deposit is successful\",()=>{\r",
							"    var jsonData= pm.response.json();\r",
							"    var message= jsonData.message;\r",
							"    pm.expect(message).contains(\"Deposit successful\")\r",
							"})"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Authorization",
						"value": "{{token}}",
						"type": "text"
					},
					{
						"key": "X-AUTH-SECRET-KEY",
						"value": "{{secretKey}}",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"from_account\":\"SYSTEM\",\r\n    \"to_account\":\"01704561926\",\r\n    \"amount\":5000\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseUrl}}/transaction/deposit",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"transaction",
						"deposit"
					]
				}
			},
			"response": []
		},
		{
			"name": "system Deposit to Agent invalid amount",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 404\", function () {\r",
							"    pm.response.to.have.status(404);\r",
							"});\r",
							"\r",
							"pm.test(\"Customer deposit is not  successful\",()=>{\r",
							"    var jsonData= pm.response.json();\r",
							"    var message= jsonData.message;\r",
							"    pm.expect(message).contains(\"Account does not exist\")\r",
							"})"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Authorization",
						"value": "{{token}}",
						"type": "text"
					},
					{
						"key": "X-AUTH-SECRET-KEY",
						"value": "{{secretKey}}",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"from_account\":\"SYSTEM\",\r\n    \"to_account\":\"01704561926000000\",\r\n    \"amount\": 5000\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseUrl}}/transaction/deposit",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"transaction",
						"deposit"
					]
				}
			},
			"response": []
		},
		{
			"name": "system Deposit to Agent valid amount",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 201\", function () {\r",
							"    pm.response.to.have.status(201);\r",
							"});\r",
							"\r",
							"pm.test(\"Customer deposit is successful\",()=>{\r",
							"    var jsonData= pm.response.json();\r",
							"    var message= jsonData.message;\r",
							"    pm.expect(message).contains(\"Deposit successful\")\r",
							"})"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Authorization",
						"value": "{{token}}",
						"type": "text"
					},
					{
						"key": "X-AUTH-SECRET-KEY",
						"value": "{{secretKey}}",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"from_account\":\"SYSTEM\",\r\n    \"to_account\":\"01704561926\",\r\n    \"amount\":5000\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseUrl}}/transaction/deposit",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"transaction",
						"deposit"
					]
				}
			},
			"response": []
		},
		{
			"name": "system Deposit to Agent invalid amount",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 400\", function () {\r",
							"    pm.response.to.have.status(400);\r",
							"});\r",
							"\r",
							"pm.test(\"Customer deposit is successful\",()=>{\r",
							"    var jsonData= pm.response.json();\r",
							"    var message= jsonData.message;\r",
							"    pm.expect(message).contains(\"Deposit successful\")\r",
							"})"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Authorization",
						"value": "{{token}}",
						"type": "text"
					},
					{
						"key": "X-AUTH-SECRET-KEY",
						"value": "{{secretKey}}",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"from_account\":\"SYSTEM\",\r\n    \"to_account\":\"01704561926\",\r\n    \"amount\":rt\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseUrl}}/transaction/deposit",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"transaction",
						"deposit"
					]
				}
			},
			"response": []
		},
		{
			"name": "check customer balance with valid phone number",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"\r",
							"pm.test(\"valid phone number shoing user balance \", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.message).contains(\"User balance\");\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Authorization",
						"value": "{{token}}",
						"type": "text"
					},
					{
						"key": "X-AUTH-SECRET-KEY",
						"value": "{{secretKey}}",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseUrl}}/transaction/balance/01686606909",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"transaction",
						"balance",
						"01686606909"
					]
				}
			},
			"response": []
		},
		{
			"name": "check customer balance with invalid phone number",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"pm.test(\"invalid phone number but shoing user balance \", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.balance).to.eql(0);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Authorization",
						"value": "{{token}}",
						"type": "text"
					},
					{
						"key": "X-AUTH-SECRET-KEY",
						"value": "{{secretKey}}",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseUrl}}/transaction/balance/01504197313333",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"transaction",
						"balance",
						"01504197313333"
					]
				}
			},
			"response": []
		},
		{
			"name": "customer withdraw money from  agent",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Customer withdraw is successful\",()=>{\r",
							"    var jsonData= pm.response.json();\r",
							"    var message= jsonData.message;\r",
							"    pm.expect(message).contains(\"Withdraw successful\")\r",
							"})\r",
							"pm.test(\"Status code is 201\", function () {\r",
							"    pm.response.to.have.status(201);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "X-AUTH-SECRET-KEY",
						"value": "{{secretKey}}",
						"type": "text"
					},
					{
						"key": "Authorization",
						"value": "{{token}}",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"from_account\":\"01504197313\",\r\n    \"to_account\":\"01704561926\",\r\n    \"amount\":100\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseUrl}}/transaction/withdraw",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"transaction",
						"withdraw"
					]
				}
			},
			"response": []
		},
		{
			"name": "customer withdraw invalid money from  agent",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"check if Customer Withdraw is successful if gives invalid amount \",()=>{\r",
							"    var jsonData= pm.response.json();\r",
							"    var message= jsonData.message;\r",
							"    pm.expect(message).contains(\"Minimum withdraw amount 10 tk\")\r",
							"})\r",
							"\r",
							"pm.test(\"Status code is 208\", function () {\r",
							"    pm.response.to.have.status(208);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "X-AUTH-SECRET-KEY",
						"value": "{{secretKey}}",
						"type": "text"
					},
					{
						"key": "Authorization",
						"value": "{{token}}",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"from_account\":\"01504197313\",\r\n    \"to_account\":\"01704561926\",\r\n    \"amount\": -8\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseUrl}}/transaction/withdraw",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"transaction",
						"withdraw"
					]
				}
			},
			"response": []
		},
		{
			"name": "check customer statement",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"\r",
							"pm.test(\"check customer statement if gives valid phone number\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.message).contains(\"Transaction list\");\r",
							"});\r",
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Authorization",
						"value": "{{token}}",
						"type": "text"
					},
					{
						"key": "X-AUTH-SECRET-KEY",
						"value": "{{secretKey}}",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseUrl}}/transaction/statement/01504197313",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"transaction",
						"statement",
						"01504197313"
					]
				}
			},
			"response": []
		},
		{
			"name": "check customer statement with invalid phone number",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"\r",
							"pm.test(\"check customer statement if gives valid phone number \", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.message).contains(\"Transaction list\");\r",
							"});\r",
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Authorization",
						"value": "{{token}}",
						"type": "text"
					},
					{
						"key": "X-AUTH-SECRET-KEY",
						"value": "{{secretKey}}",
						"type": "text"
					}
				],
				"url": {
					"raw": "{{baseUrl}}/transaction/statement/015041973133333333",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"transaction",
						"statement",
						"015041973133333333"
					]
				}
			},
			"response": []
		},
		{
			"name": "send money to valid user",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Send Money is successful\",()=>{\r",
							"    var jsonData= pm.response.json();\r",
							"    var message= jsonData.message;\r",
							"    pm.expect(message).contains(\"Send money successful\")\r",
							"})\r",
							"pm.test(\"Status code is 201\", function () {\r",
							"    pm.response.to.have.status(201);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "X-AUTH-SECRET-KEY",
						"value": "{{secretKey}}",
						"type": "text"
					},
					{
						"key": "Authorization",
						"value": "{{token}}",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"from_account\":\"01504197313\",\r\n    \"to_account\":\"01686606909\",\r\n    \"amount\":200\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseUrl}}/transaction/sendmoney",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"transaction",
						"sendmoney"
					]
				}
			},
			"response": []
		},
		{
			"name": "send money to invalid user",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Send Money is successful\",()=>{\r",
							"    var jsonData= pm.response.json();\r",
							"    var message= jsonData.message;\r",
							"    pm.expect(message).contains(\"Account does not exist\")\r",
							"})\r",
							"pm.test(\"Status code is 404\", function () {\r",
							"    pm.response.to.have.status(404);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "X-AUTH-SECRET-KEY",
						"value": "{{secretKey}}",
						"type": "text"
					},
					{
						"key": "Authorization",
						"value": "{{token}}",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"from_account\":\"01504197313\",\r\n    \"to_account\":\"wdsdfcdsf\",\r\n    \"amount\":200\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseUrl}}/transaction/sendmoney",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"transaction",
						"sendmoney"
					]
				}
			},
			"response": []
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "baseUrl",
			"value": "http://dmoney.roadtocareer.net",
			"type": "string"
		},
		{
			"key": "token",
			"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6InNhbG1hbkByb2FkdG9jYXJlZXIubmV0IiwicGFzc3dvcmQiOiIxMjM0IiwiaWF0IjoxNjc0NzI1NjQzLCJleHAiOjE2NzQ3Mjc0NDN9.oiDITKeCNSqQce1f0BcNo7MjY5Qn1m1BglMm0v4d3CQ",
			"type": "string"
		},
		{
			"key": "secretKey",
			"value": "ROADTOSDET",
			"type": "string"
		},
		{
			"key": "randomId",
			"value": 35257
		},
		{
			"key": "phoneNumber",
			"value": "01704387518"
		},
		{
			"key": "agentId",
			"value": 2176
		},
		{
			"key": "agent_phone_number",
			"value": "01704120838"
		},
		{
			"key": "userId",
			"value": 2704
		},
		{
			"key": "phone_number",
			"value": "01509126022"
		}
	]
}